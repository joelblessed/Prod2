{
    "sourceFile": "src/components/pages/category.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1738245009901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738245018791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n import React, { useState, useEffect } from \"react\";\n import { useNavigate } from 'react-router-dom';\n \n-function Category({apiaddToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n+function Category({api,addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(\"http://localhost:5000/products\")\n+    fetch(`/products\")\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245028560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(`/products\")\n+    fetch(`${}/products\")\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245039156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(`${}/products\")\n+    fetch(`${api}/products`)\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245059503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         {filteredProducts.map((product) => (\n             <div key={product._id} className='box2'  >\n                        \n             <img className='image'\n-                src={'http://localhost:5000/images/'+product.image}\n+                src={`${api}/images/'+product.image}\n                 alt={product.name}\n                 onClick={() => handleProductClick(product)}\n                \n                 />\n"
                }
            ],
            "date": 1738245009901,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Category({apiaddToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n  const [items, setItems] = useState([]);\n  \n  const [filteredItems, setFilteredItems] = useState([]);\n\n  // Fetch items from db.json (JSON Server)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/products\")\n      .then((response) => response.json())\n      .then((data) => {\n        setItems(data); // Store all items\n        setFilteredItems(data); // Set initial filtered items\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // Filter items based on selected category\n  useEffect(() => {\n    if (selectedCategory === \"All\" ) {\n      setFilteredItems(items);\n    } else {\n      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n      \n    }\n  }, [selectedCategory, items]); // Re-run filter when category or items change\n\n  const filteredProducts = filteredItems.filter((product) => ( \n    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n  ));\n\nconst navigate = useNavigate();\n  const handleProductClick = (product) => {\n    setSelectedProduct(product);\n    navigate(\"/selectedProduct\")\n  };\n\n  \n  return (\n    <div>\n      \n<h1>cat</h1>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n        {filteredProducts.map((product) => (\n            <div key={product._id} className='box2'  >\n                       \n            <img className='image'\n                src={'http://localhost:5000/images/'+product.image}\n                alt={product.name}\n                onClick={() => handleProductClick(product)}\n               \n                />\n                 <span className='text'>\n                    <a  className='name'><span style={{color:\"black\"}} \n                        dangerouslySetInnerHTML={{\n                        __html: highlightText(product.name, searchTerm),\n                               }}\n                         ></span> </a>\n                    <a>Description: {product.desc}</a>\n                    <a>Price: {product.price}</a>\n                 </span>\n                 <div className='cart'>\n                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n                    \n                 </div>\n                  \n                 \n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Category\n;"
        }
    ]
}